import{_ as s,c as n,o as a,N as o}from"./chunks/framework.8a749e37.js";const C=JSON.parse('{"title":"Upgrading from version 2 to 3","description":"","frontmatter":{},"headers":[],"relativePath":"v3/guide/upgrading/upgrading-from-version-2-to-3.md"}'),e={name:"v3/guide/upgrading/upgrading-from-version-2-to-3.md"},l=o(`<h1 id="upgrading-from-version-2-to-3" tabindex="-1">Upgrading from version 2 to 3 <a class="header-anchor" href="#upgrading-from-version-2-to-3" aria-label="Permalink to &quot;Upgrading from version 2 to 3&quot;">â€‹</a></h1><p>In this new major release which supports the new MongoDB PHP extension, we also moved the location of the Model class and replaced the MySQL model class with a trait.</p><p>Please change all <code>Jenssegers\\Mongodb\\Model</code> references to <code>Jenssegers\\Mongodb\\Eloquent\\Model</code> either at the top of your model files or your registered alias.</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;">Jenssegers</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Mongodb</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Eloquent</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Model</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Model</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>If you are using hybrid relations, your MySQL classes should now extend the original Eloquent model class <code>Illuminate\\Database\\Eloquent\\Model</code> instead of the removed <code>Jenssegers\\Eloquent\\Model</code>.</p><p>Instead use the new <code>Jenssegers\\Mongodb\\Eloquent\\HybridRelations</code> trait. This should make things more clear as there is only one single model class in this package.</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;">Jenssegers</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Mongodb</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Eloquent</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">HybridRelations</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Model</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;">HybridRelations</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">connection </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mysql</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Embedded relations now return an <code>Illuminate\\Database\\Eloquent\\Collection</code> rather than a custom Collection class. If you were using one of the special methods that were available, convert them to Collection operations.</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">books </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">books</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">sortBy</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)-&gt;</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span></code></pre></div>`,9),p=[l];function t(r,c,i,y,d,D){return a(),n("div",null,p)}const A=s(e,[["render",t]]);export{C as __pageData,A as default};
