.. _laravel-update-one-usage:

=================
Update a Document
=================

You can update a document in a collection by chaining the ``where()``, ``first()``,
and ``update()`` methods to an Eloquent model or a query builder.

Pass a query filter to the ``where()`` method and call the ``first()`` method to match 
only one document. Then, pass the document changes to the ``update()`` method to update
one document that matches the filter.

To learn more about updating data with {+odm-short+}, see the `Updates
<https://laravel.com/docs/6.x/eloquent#updates>`__ section of the Laravel documentation.

Example
-------

This usage example updates a document that matches a query filter from the ``movies``
collection in the ``sample_mflix`` database. The example uses the ``Movie`` Eloquent model
to represent the ``movies`` collection.

This example performs the following actions:

- Defines a query filter to match documents in which the value of the ``title`` field
  is ``'Carol'``
- Calls the ``first()`` method to retrieve the first document that matches the query filter,
  according to the sort order specified by the ``orderBy()`` method
- Calls the ``update()`` method to update the value of the ``metacritic`` field from ``98``
  to ``94``

To see the update operation code, select the :guilabel:`Controller File Code` tab. To see
the HTML code that specifies a view, select the :guilabel:`View File Code` tab.

.. important:: 

   Before running the update operation, you must add the following statement to the 
   ``Movie`` class in your ``Movie.php`` file:

   .. code-block:: php
   
      protected $fillable = array('metacritic');

   The ``$fillable`` property specifies which document fields are mass-assignable. To learn
   more about ``$fillable``, see the `Mass Assignment <https://laravel.com/docs/4.2/eloquent#mass-assignment>`__
   section of the Laravel documentation.
   
.. tabs::

   .. tab:: Controller File Code
      :tabid: find-one-controller

      .. code-block:: php

         class MovieController
         {
             public function show()
             {
                $update = Movie::where('title', 'Carol')
                    ->orderBy('_id')
                    ->first()
                    ->update(['metacritic' => 94]);

                return view('browse_movies', [
                    'updates' => $update
                ]);
             }
         }

   .. tab:: View File Code
      :tabid: find-one-view

      .. io-code-block::
         :copyable: true

         .. input::
            :language: php
            
            <!DOCTYPE html>
            <html>
            <head>
            <title>Browse Movies</title>
            </head>
            <body>
            <h2>Movies</h2>
            <p>
                Updated documents: {{ $updates }}<br>
            </p>
            </body>
            </html>

         .. output::
            :language: console
            :visible: false

            Updated documents: 1

To perform the update operation, start your Laravel application by running the following command:

.. code-block:: bash

   php artisan serve

Then, open the following URL in your web browser to view the expected output:

.. code-block:: none

   http://127.0.0.1:8000/browse_movies