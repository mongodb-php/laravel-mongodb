===============
Laravel MongoDB
===============

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: php framework, odm, eloquent, query builder

.. toctree::
   :titlesonly:
   :maxdepth: 1

   /install
   /eloquent-models
   /query-builder
   /user-authentication
   /queues
   /transactions
   /upgrade

Introduction
------------

Welcome to the documentation site for the official {+odm-long+}.
This package extends methods in the PHP Laravel API to work with MongoDB as
a datastore in your Laravel application.  {+odm-short+} allows you to use
Laravel Eloquent and Query Builder syntax to work with your MongoDB data.

.. note::

   This documentation describes the ``mongodb/laravel-mongodb`` package,
   formerly named ``jenssegers/mongodb``. This package is now owned and
   maintained by MongoDB, Inc. and is compatible with Laravel 10.x and
   later.

   To find versions of the package compatible with older versions of Laravel,
   see the `Laravel Version Compatibility <https://github.com/mongodb/laravel-mongodb/tree/3.9#laravel-version-compatibility>`__
   table.

Getting Started
---------------

Learn how to install and configure your app to MongoDB by using the
{+odm-short+} in the :ref:`laravel-install` section.

Fundamentals
------------

To learn how to perform the following tasks by using the {+odm-short+},
see the following content:

- :ref:`laravel-eloquent-models`
- :ref:`laravel-query-builder`
- :ref:`laravel-user-authentication`
- :ref:`laravel-queues`
- :ref:`laravel-transactions`

Upgrade Versions
----------------

Learn what changes you might need to make to your application to upgrade
versions in the :ref:`laravel-upgrading` section.

Reporting Issues
----------------

We are lucky to have a vibrant PHP community that includes users of varying
experience with MongoDB PHP Library and {+odm-short+}. To get support for
general questions, search or post in the
`MongoDB Community Forums <https://www.mongodb.com/community/forums/>`__.

To learn more about MongoDB support options, see the
`Technical Support <https://www.mongodb.org/about/support>`__ page.


Bugs / Feature Requests
-----------------------

If you think you've found a bug or want to see a new feature in {+odm-short+},
please open a case in our issue management tool, JIRA, by performing the
following steps:

1. Visit the `MongoDB JIRA issue tracker <https://jira.mongodb.org/>`__ and click the
   `signup link <https://account.mongodb.com/account/register>`__.
   Create an account, and then log in to JIRA.
#. Navigate to the `PHPORM <https://jira.mongodb.org/browse/PHPORM>`__ project.
#. Click :guilabel:`Create` to create a ticket. Please provide as much
   information as possible about the issue or request in the ticket.

.. note::

   Bug reports in the PHPORM JIRA project are publicly viewable.

If youâ€™ve identified a security vulnerability in any official MongoDB
product, please report it according to the instructions found in the
:manual:`Create a Vulnerability Report page </tutorial/create-a-vulnerability-report>`.
Note: All reported issues in JIRA project are public.

For general questions and support requests, please use one of MongoDB's
:manual:`Technical Support </support/>` channels.

Pull Requests
-------------

We are happy to accept contributions to help improve the {+odm-short+}.

We track current development in `PHPORM <https://jira.mongodb.org/projects/PHPORM/summary>`__
MongoDB JIRA project.

To learn more about contributing to this project, see the
`CONTRIBUTING.md <https://github.com/mongodb/laravel-mongodb/blob/4.1/CONTRIBUTING.md>`__
guide on GitHub.

