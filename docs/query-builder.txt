.. _laravel-query-builder:

=============
Query Builder
=============

.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: code example

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In this guide, you can learn how to use the {+odm-short+} extension of
the Laravel query builder to work with a MongoDB database. The query builder
lets you write queries for any supported database by using the same fluent
interface and syntax.

.. note::

   {+odm-short+} extends Laravel's query builder and Eloquent ORM, both of
   which can run similar database operations. To learn more about retrieving
   documents by using Eloquent models, see :ref:`laravel-fundamentals-retrieve`.

Laravel provides a **facade** to access the query builder class ``DB``, which
lets you perform database operations. Facades are static interfaces to
classes that make the syntax more concise, avoid runtime errors,and improve
testability.

{+odm-short+} aliases the ``DB`` method ``table()`` as ``collection()``. Chain
methods to specify the command and any constraints. Then, chain the ``get()``
method at the end to run them on the MongoDB collection. The following example
shows the structure of a query builder call:

.. code-block:: php

   DB::collection('<collection name>')
       // chain methods by using the -> operator
      ->get();


This guide shows how to perform the following query builder operations:

- Retrieve Documents
  - Where Method
  - Logical Conditionals (orWhere, whereNot, and And)
- Range and types (whereBetween, whereNull, whereDate)
- Array operations (whereIn,
- Nesting Logic Groups
- Modify results: orderBy, groupBy, skip, projection, projection with pagination
- Distinct
- Like
- Aggregations (is this in Query Builder?)
- MongoDB query operators
- MongoDB Raw Expressions
- MongoDB Cursor Timeout


- Increment/ decrement (are these write?)

MongoDB Write Operations

- Upsert
- Combine with Paginate (is this necessary?)
- Modify arrays - push and pull
- Remove a field from a document - unset


Before You Get Started
----------------------

To run the code examples in this guide, complete the
:ref:`Quick Start <laravel-quick-start>` tutorial and paste the example code
in the appropriate controller method.

.. note::

   The view in the Quick Start tutorial displays object results. However, the
   Laravel query builder returns array results. Modify the view to use array
   access syntax instead of object access syntax as shown in the following
   example:.

   .. code-block:: php

      // Object access syntax
      {{ $movie->imdb->votes }}

      // Array access syntax
      {{ $movie['imdb']['votes'] }}

.. _laravel-retrieve-query-builder:

Retrieve Documents
------------------

To retrieve documents by using the query builder, import the
``Illuminate\Support\Facades\DB`` facade and compose your query by using
Laravel's query builder syntax.


Where Method Example
~~~~~~~~~~~~~~~~~~~~

The following example shows how to use the ``where()`` method retrieve
documents from the ``movies`` collection that contain a ``imdb.votes`` field
value of ``350``. Click the :guilabel:`{+code-output-label+}` button to see the
results returned from the query:

.. io-code-block::

   .. input:: /includes/query-builder/MovieController.php
      :language: php
      :dedent:
      :start-after: begin query where
      :end-before: end query where

   .. output::
      :language: none
      :visible: false

      Title: Cosmos
      Year: 1980
      Runtime: 60
      IMDB Rating: 9.3
      IMDB Votes: 17174
      Plot: Astronomer Carl Sagan leads us on an engaging guided tour of the various elements and cosmological theories of the universe.

      Title: The Shawshank Redemption
      Year: 1994
      Runtime: 142
      IMDB Rating: 9.3
      IMDB Votes: 1521105
      Plot: Two imprisoned men bond over a number of years, finding solace and eventual redemption through acts of common decency.

      Title: The Shawshank Redemption
      Year: 1994
      Runtime: 142
      IMDB Rating: 9.3
      IMDB Votes: 1513145
      Plot: Two imprisoned men bond over a number of years, finding solace and eventual redemption through acts of common decency.

      Title: The Real Miyagi
      Year: 2015
      Runtime: 90
      IMDB Rating: 9.3
      IMDB Votes: 41
      Plot: The life of the greatest karate master of a generation.

Logical Conditional Operation Examples
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The examples in this section show query builder syntax you can use to perform
the following logical conditional operations:

- **OR** by chaining the ``orWhere()`` function
- **AND** by chaining another ``where()`` function
- **NOT** which uses the ``whereNot()`` function




The following example shows how to use the following logical conditional
operations:


``where()`` method retrieve
documents from the ``movies`` collection that contain a ``imdb.votes`` field
value of ``350``. Click the :guilabel:`{+code-output-label+}` button to see the
results returned from the query:

s (orWhere, whereNot, and And)




